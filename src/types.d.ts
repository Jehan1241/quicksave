// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on
// whether you're running in development or production).

declare interface Window {
  windowFunctions: {
    nukeCache: () => void;
    closeApp: () => void;
    minimize: () => void;
    maximize: () => void;
    updatePlayingGame: (uid: string, screenshotBind: string) => void;
  };
  electron: {
    openFolder: (folderPath: string) => Promise<void>;
    validateGamePath: (gamePath) => any;
    browseFileHandler: (
      options: Electron.OpenDialogOptions
    ) => Promise<Electron.OpenDialogReturnValue>;
    onUpdateAvailable: (
      callback: (update: { version: string; zipUrl: string }) => void
    ) => void;
    sendUpdateResponse: (choice: boolean) => Promise<void>;
    onProgress: (callback: (progress: number) => void) => void;
    imageSearch: (query: string, page: number) => Promise<GoogleImage[]>;
    fetchImageBuffer: (url: string) => Promise<string | null>;
    updateMinimizeSetting: (value: boolean) => void;
    onRequestMinimizeSetting: (callback: (value: boolean) => void) => void;
    sendMinimizeSetting: (value: boolean) => void;
  };
  themeMode: {
    toggle: () => Promise<boolean>;
    dark: () => Promise<void>;
    light: () => Promise<void>;
    system: () => Promise<boolean>;
    current: () => Promise<"dark" | "light" | "system">;
  };
  appPaths: {
    exePath: () => Promise<string>;
  };
}

declare interface GoogleImage {
  ImageUrl: string;
  ThumbUrl: string;
  Width: number;
  Height: number;
}
